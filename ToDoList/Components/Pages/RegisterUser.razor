@page "/register"
@using ToDoList.Api.Models
@inject AuthService AuthService
@inject NavigationManager _navigation
@rendermode RenderMode.InteractiveServer

<PageTitle>Register</PageTitle>
<h1>Registration Form</h1>

<EditForm Model="@registration" OnValidSubmit="@SavingUser">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Username</label>
        <InputText class="form-control" @bind-Value="@registration.UserName" />
        
    </div>

    <div class="form-group">
        <label>Email</label>
        <InputText class="form-control" @bind-Value="@registration.Email" />
       
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText class="form-control" type="password" @bind-Value="@registration.Password" />
        
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Create</button>
    </div>
</EditForm>




@code {
    private Register registration=new();
   private string ErrorMessage="";

    private async Task SavingUser()
    {

        // Passa i dati al metodo di registrazione
        var result =  await AuthService.RegisterAsync(registration.UserName, registration.Email, registration.Password);
        
        if(result.IsSuccess)
        {
            _navigation.NavigateTo("/login");
        }
        
        else
        {
            ErrorMessage = result.ErrorMessage;
        }
    }
}

<div class="alert alert-danger" style="display:@(string.IsNullOrEmpty(ErrorMessage) ? "none" : "block")">
    @ErrorMessage
</div>